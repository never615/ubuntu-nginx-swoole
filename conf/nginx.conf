user  www;
worker_processes auto;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

pid  run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections  1024;
}

http {
    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    server_tokens off;

    sendfile             on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;
    client_max_body_size 100m;

    # gzip on; #on|off 是否开启gzip
    # gzip_buffers 32 4K; #缓冲(压缩在内存中缓冲几块? 每块多大?) 32 4K| 16 8K
    # gzip_comp_level 6; #[1-9] 推荐6 压缩级别(级别越高,压的越小,越浪费CPU计算资源)
    # gzip_disable "MSIE [1-6]\.";#正则匹配UA 什么样的Uri不进行gzip.配置禁用gzip条件，支持正则。此处表示ie6及以下不启用gzip（因为ie低版本不支持）
    # gzip_min_length 100; # 开始压缩的最小长度(再小就不要压缩了,意义不在)
    # #gzip_http_version  # 1.0|1.1 开始压缩的http协议版本(可以不设置,目前几乎全是1.1协议)
    # #gzip_proxied # 设置请求者代理服务器,该如何缓存内容
    # gzip_types text/css text/xml text/plain application/json application/javascript; # 对哪些类型的文件用压缩 如txt,xml,html ,css
    # gzip_vary on; # on|off 是否传输gzip压缩标志

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;
}
